<project name="InteractiveBinPacking" default="all" basedir="..">
  <description>
  Build file for the InteractiveBinPacking application.
  </description>
  <!-- global properties for this build -->
  <property name="VERSION" value="3.0"/>
  <property name="src" location="src"/>
  <property name="bin" location="bin"/>
  <property name="dist" location="dist"/>
  <property name="resources" location="${src}/res" />
  <property name="main-class" value="org.cicirello.ibp.PackingFrame" />
  <property name="jar-file-name" value="interactive-bin-packing-${VERSION}.jar" />
  <property name="testsrc" location="tests"/>
  <property name="testbin" location="testbin"/>
  <property name="junit" location="build/junit-4.12.jar"/>
  <property name="hamcrest" location="build/hamcrest-core-1.3.jar"/>
  
  <path id="master-classpath">
	<pathelement path="${bin}"/>
  </path>
  
  <path id="test-compile-path">
	<pathelement path="${dist}/${jar-file-name}"/>
	<pathelement path="${junit}"/>
  </path>
  
  <path id="test-execute-path">
	<path refid="test-compile-path"/>
	<pathelement path="${hamcrest}"/>
	<pathelement path="${testbin}"/>
  </path>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${bin}"/>
	<!-- Create the directory for the jar file -->
    <mkdir dir="${dist}"/>
  </target>
  
  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the Java code from ${src} into ${bin} -->
    <javac srcdir="${src}" destdir="${bin}" includeantruntime="false">
	<classpath refid="master-classpath"/>
	<compilerarg value="-Xlint:unchecked"/>
	</javac>	
  </target>
  
  <target name="dist" depends="compile"
        description="generate the distribution">
		
    <!-- Put everything in ${bin} into the jar file -->
    <jar jarfile="${dist}/${jar-file-name}" basedir="${bin}">
		<fileset dir="${resources}" />
		<manifest>
		<attribute name="Main-Class" value="${main-class}"/>
		</manifest>
	</jar>
  </target>
  
  <target name="all" depends="dist" description="compile everything and generate jar">
  </target>
  
  <target name="test" depends="dist" description="compile and execute JUnit tests">
	<!-- Create the test directory structure-->
	<mkdir dir="${testbin}"/>
	<!-- Compile the tests-->
    <javac srcdir="${testsrc}" destdir="${testbin}" includeantruntime="false">
		<classpath refid="test-compile-path"/>
		<compilerarg value="-Xlint:unchecked"/>
	</javac>
	<!-- Execute the tests-->
	<junit haltonfailure="on">
	  <formatter type="plain" usefile="false"/>
	    <classpath refid="test-execute-path"/>
		<batchtest>
          <fileset dir="${testbin}">
            <include name="**/*.class"/>
			<exclude name="**/*$*"/>
          </fileset>
        </batchtest>
	</junit>	
  </target>
  
  <target name="clean"
        description="clean up">
    <!-- Delete the ${bin} and ${dist} directory trees -->
	<delete dir="${bin}"/>
    <delete dir="${dist}"/>
	<delete dir="${testbin}"/>
  </target>

</project>
